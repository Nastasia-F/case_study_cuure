{"ast":null,"code":"var _jsxFileName = \"/Users/nastasiafourcade/code/case_study_cuure/cuure_study_case/src/pagination.js\";\nimport ReactDOM from 'react-dom'; // class Pagination extends Component {\n//   constructor(props) {\n//     super(props);\n//     const { totalRecords = null, pageLimit = 5, pageNeighbours = 0 } = props;\n//     this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 5;\n//     this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n//     // pageNeighbours can be: 0, 1 or 2\n//     this.pageNeighbours = typeof pageNeighbours === 'number'\n//       ? Math.max(0, Math.min(pageNeighbours, 2))\n//       : 0;\n//     this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n//     this.state = { currentPage: 1 };\n//   }\n// }\n// Pagination.propTypes = {\n//   totalRecords: PropTypes.number.isRequired,\n//   pageLimit: PropTypes.number,\n//   pageNeighbours: PropTypes.number,\n//   onPageChanged: PropTypes.func\n// };\n// export default Pagination;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  items: React.PropTypes.array.isRequired,\n  onChangePage: React.PropTypes.func.isRequired,\n  initialPage: React.PropTypes.number\n};\nconst defaultProps = {\n  initialPage: 1\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    var items = this.props.items;\n    var pager = this.state.pager;\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    } // get new pager object for specified page\n\n\n    pager = this.getPager(items.length, page); // get new page of items from items array\n\n    var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n    this.setState({\n      pager: pager\n    }); // call change page function in parent component\n\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1; // default page size is 10\n\n    pageSize = pageSize || 3; // calculate total pages\n\n    var totalPages = Math.ceil(totalItems / pageSize);\n    var startPage, endPage;\n\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    } // calculate start and end item indexes\n\n\n    var startIndex = (currentPage - 1) * pageSize;\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return object with all pager properties required by the view\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    var pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.setPage(1),\n          children: \"First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.setPage(pager.currentPage - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), pager.pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: pager.currentPage === page ? 'active' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.setPage(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.setPage(pager.currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.setPage(pager.totalPages),\n          children: \"Last\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps; // * App Component\n\nclass App extends React.Component {\n  constructor() {\n    super(); // an example array of items to be paged\n\n    var exampleItems = [...Array(15).keys()].map(i => ({\n      id: i + 1,\n      name: 'Item ' + (i + 1)\n    }));\n    this.state = {\n      exampleItems: exampleItems,\n      pageOfItems: []\n    };\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    // update state with new page of items\n    this.setState({\n      pageOfItems: pageOfItems\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"React - Pagination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), this.state.pageOfItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n            items: this.state.exampleItems,\n            onChangePage: this.onChangePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 207,\n  columnNumber: 17\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["/Users/nastasiafourcade/code/case_study_cuure/cuure_study_case/src/pagination.js"],"names":["ReactDOM","propTypes","items","React","PropTypes","array","isRequired","onChangePage","func","initialPage","number","defaultProps","Pagination","Component","constructor","props","state","pager","componentWillMount","length","setPage","componentDidUpdate","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","render","index","App","exampleItems","id","name","bind","item","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\n\n// class Pagination extends Component {\n//   constructor(props) {\n//     super(props);\n//     const { totalRecords = null, pageLimit = 5, pageNeighbours = 0 } = props;\n\n//     this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 5;\n//     this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n//     // pageNeighbours can be: 0, 1 or 2\n//     this.pageNeighbours = typeof pageNeighbours === 'number'\n//       ? Math.max(0, Math.min(pageNeighbours, 2))\n//       : 0;\n\n//     this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n//     this.state = { currentPage: 1 };\n//   }\n// }\n\n// Pagination.propTypes = {\n//   totalRecords: PropTypes.number.isRequired,\n//   pageLimit: PropTypes.number,\n//   pageNeighbours: PropTypes.number,\n//   onPageChanged: PropTypes.func\n// };\n\n// export default Pagination;\n\nconst propTypes = {\n    items: React.PropTypes.array.isRequired,\n    onChangePage: React.PropTypes.func.isRequired,\n    initialPage: React.PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        var items = this.props.items;\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 3;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <ul className=\"pagination\">\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(1)}>First</a>\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                        <a onClick={() => this.setPage(page)}>{page}</a>\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n                </li>\n            </ul>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\n\n// * App Component\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        // an example array of items to be paged\n        var exampleItems = [...Array(15).keys()].map(i => ({ id: (i+1), name: 'Item ' + (i+1) }));\n\n        this.state = {\n            exampleItems: exampleItems,\n            pageOfItems: []\n        };\n\n        this.onChangePage = this.onChangePage.bind(this);\n    }\n\n    onChangePage(pageOfItems) {\n        // update state with new page of items\n        this.setState({ pageOfItems: pageOfItems });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"text-center\">\n                        <h1>React - Pagination</h1>\n                        {this.state.pageOfItems.map(item =>\n                            <div className=\"box\" key={item.id}>{item.name}</div>\n                        )}\n                        <Pagination items={this.state.exampleItems} onChangePage={this.onChangePage} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}