{"ast":null,"code":"var _jsxFileName = \"/Users/nastasiafourcade/code/case_study_cuure/cuure_study_case/src/page.js\";\nimport './page.css';\nimport React from 'react'; // import App from './app.js';\n// function Paginate(){\n//   const [currentPage, setCurrentPage] = React.useState(4);\n//   let maxPages = 5;\n//   let items = [];\n//   let leftSide = currentPage - 2;\n//   if(leftSide <= 0 ) leftSide=1;\n//   let rightSide = currentPage + 2;\n//   if(rightSide>maxPages) rightSide = maxPages;\n//   for (let number = leftSide ; number <= rightSide; number++) {\n//     items.push(\n//       <div key={number} className={(number === currentPage ? 'round-effect active' : 'round-effect')} onClick={()=>{ setCurrentPage(number)}}>\n//         {number}\n//       </div>,\n//     );\n//   }\n// const nextPage = () => {\n//   if(currentPage<maxPages){\n//     setCurrentPage(currentPage+1)\n//   }\n// }\n// const prevPage = () => {\n//   if(currentPage>1){\n//     setCurrentPage(currentPage-1)\n//   }\n// }\n//   const paginationRender = (\n//     <div className=\"flex-container\">\n//     <div> currentPage : { currentPage } </div>\n//       <div className=\"paginate-ctn\">\n//         <div className=\"round-effect\" onClick={prevPage}></div>\n//         {items}\n//         <div className=\"round-effect\" onClick={nextPage}></div>\n//       </div>\n//     </div>\n//   );\n//   return (paginationRender);\n// }\n// export default Paginate;\n// ---------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.clear();\n\nclass Paginate extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k'],\n      currentPage: 1,\n      todosPerPage: 3\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      currentPage,\n      todosPerPage\n    } = this.state; // Logic for displaying current todos\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map((todo, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this);\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: this.handleClick,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"page-numbers\",\n        children: renderPageNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Paginate;","map":{"version":3,"sources":["/Users/nastasiafourcade/code/case_study_cuure/cuure_study_case/src/page.js"],"names":["React","console","clear","Paginate","Component","constructor","state","todos","currentPage","todosPerPage","handleClick","bind","event","setState","Number","target","id","render","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","todo","index","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEAC,OAAO,CAACC,KAAR;;AAGE,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,CADI;AAEXC,MAAAA,WAAW,EAAE,CAFF;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AACZL,MAAAA,WAAW,EAAEM,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd;AADP,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAuC,KAAKH,KAAlD,CADO,CAGP;;AACA,UAAMY,eAAe,GAAGV,WAAW,GAAGC,YAAtC;AACA,UAAMU,gBAAgB,GAAGD,eAAe,GAAGT,YAA3C;AACA,UAAMW,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;AAEA,UAAMI,WAAW,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,0BAAO;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFmB,CAApB,CARO,CAYP;;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUtB,KAAK,CAACuB,MAAN,GAAerB,YAAzB,CAArB,EAA6DkB,CAAC,EAA9D,EAAkE;AAChED,MAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AAED,UAAMK,iBAAiB,GAAGN,WAAW,CAACH,GAAZ,CAAgBU,MAAM,IAAI;AAClD,0BACE;AAEE,QAAA,EAAE,EAAEA,MAFN;AAGE,QAAA,OAAO,EAAE,KAAKvB,WAHhB;AAAA,kBAKGuB;AALH,SACOA,MADP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVyB,CAA1B;AAYA,wBACE;AAAA,8BACE;AAAA,kBACGX;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,EAAE,EAAC,cAAP;AAAA,kBACGU;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzDoC;;AA4DzC,eAAe7B,QAAf","sourcesContent":["import './page.css';\nimport React from 'react';\n// import App from './app.js';\n\n// function Paginate(){\n\n//   const [currentPage, setCurrentPage] = React.useState(4);\n//   let maxPages = 5;\n//   let items = [];\n//   let leftSide = currentPage - 2;\n//   if(leftSide <= 0 ) leftSide=1;\n//   let rightSide = currentPage + 2;\n//   if(rightSide>maxPages) rightSide = maxPages;\n//   for (let number = leftSide ; number <= rightSide; number++) {\n//     items.push(\n//       <div key={number} className={(number === currentPage ? 'round-effect active' : 'round-effect')} onClick={()=>{ setCurrentPage(number)}}>\n//         {number}\n//       </div>,\n//     );\n//   }\n// const nextPage = () => {\n//   if(currentPage<maxPages){\n//     setCurrentPage(currentPage+1)\n//   }\n// }\n\n// const prevPage = () => {\n//   if(currentPage>1){\n//     setCurrentPage(currentPage-1)\n//   }\n// }\n\n//   const paginationRender = (\n//     <div className=\"flex-container\">\n//     <div> currentPage : { currentPage } </div>\n\n//       <div className=\"paginate-ctn\">\n//         <div className=\"round-effect\" onClick={prevPage}></div>\n//         {items}\n//         <div className=\"round-effect\" onClick={nextPage}></div>\n//       </div>\n//     </div>\n//   );\n//   return (paginationRender);\n// }\n\n// export default Paginate;\n\n// ---------------------------------------\n\nconsole.clear();\n\n\n  class Paginate extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        todos: ['a','b','c','d','e','f','g','h','i','j','k'],\n        currentPage: 1,\n        todosPerPage: 3\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n\n    render() {\n      const { todos, currentPage, todosPerPage } = this.state;\n\n      // Logic for displaying current todos\n      const indexOfLastTodo = currentPage * todosPerPage;\n      const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n      const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\n\n      const renderTodos = currentTodos.map((todo, index) => {\n        return <li key={index}>{todo}</li>;\n      });\n\n      // Logic for displaying page numbers\n      const pageNumbers = [];\n      for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      const renderPageNumbers = pageNumbers.map(number => {\n        return (\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n          >\n            {number}\n          </li>\n        );\n      });\n\n      return (\n        <div>\n          <ul>\n            {renderTodos}\n          </ul>\n          <ul id=\"page-numbers\">\n            {renderPageNumbers}\n          </ul>\n        </div>\n      );\n    }\n  }\n\nexport default Paginate;\n"]},"metadata":{},"sourceType":"module"}